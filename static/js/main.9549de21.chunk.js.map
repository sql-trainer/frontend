{"version":3,"sources":["images/feathers.svg","images/reflection.svg","images/sweat.svg","images/layers.svg","images/graph.svg","images/list.svg","images/log-in.svg","images/test.svg","components/pages/NotFound/index.jsx","components/common/Header/index.jsx","components/common/Footer/index.jsx","components/pages/Home/Features.jsx","components/pages/Home/Steps.jsx","components/pages/Home/AboutUs.jsx","components/pages/Home/index.jsx","components/pages/Training/Table.jsx","store/actions/databaseActions.js","constants/index.js","store/actions/questionActions.js","components/pages/Training/Questions.jsx","components/pages/Training/containers/Questions.js","store/actions/tabsActions.js","components/pages/Training/Tabs.jsx","components/pages/Training/containers/Tabs.js","components/pages/Training/index.jsx","components/pages/LogoPresentation/index.jsx","components/pages/Training/containers/index.js","icons/index.js","components/App/index.jsx","store/reducers/questionReducer.js","store/reducers/databaseReducer.js","store/reducers/tabsReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","NotFound","react_default","a","createElement","Component","Header","props","Object","assign","className","NavLink","to","lib_default","suppressScrollY","activeClassName","href","Footer","id","Features","alt","src","feathers","reflection","sweat","layers","Link","Steps","login","list","test","graph","AboutUs","Home","document","title","querySelector","components_common_Header","Home_Features","Home_AboutUs","Home_Steps","components_common_Footer","Table","_this$props","this","rows","fields","map","row","index","key","field","name","getFields","getData","isLoading","payload","type","loadDatabaseFromAPI","dbID","dispatch","fetch","concat","then","res","json","status","console","log","database","objectSpread","isDatabaseLoading","catch","err","changeCurrQuestion","Questions","state","isAllQOpen","handleQuestionSwitcher","dir","_this","questions","currQuestion","newQuestion","length","setCurrQuestion","setState","_this$props2","deleteAllTabs","_this2","_this$props3","isQuestionsLoading","Fragment","data-loading","data-tip","onClick","e","index_es","icon","rotation","question","join","q","handleQuestionChange","QuestionsContainer","connect","ownProps","Tabs","_deleteTab","stopPropagation","deleteTab","tabs","currTab","isInputAreaPinned","pinInputArea","createNewTab","changeTab","tab","TabsContainer","html","response","undefined","Training","SQLCheckingFor","isCheckButtonDisabled","handleContentEditable","value","changeTabHtml","highlightSQL","sql","Prism","highlight","languages","checkSQL","changeTabResponse","newTabs","finally","loadQuestionsFromAPI","_this$state","changeTableActivity","style","minWidth","containers_Questions","tables","table","active","prop","isKey","toUpperCase","containers_Tabs","react_simple_code_editor_lib_default","onValueChange","code","tabSize","disabled","pages_Training_Table","LogoPresentation","TrainingContainer","getState","dbId","library","add","faSignInAlt","faPuzzlePiece","faFileAlt","faChartBar","faPlus","faAngleLeft","faAngleRight","faAngleDown","faSitemap","faTimes","faThumbtack","App","Switch","Route","exact","path","component","dist_default","effect","delayShow","initialState","arguments","action","newCurrTab","splice","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","basename","src_components_App","getElementById"],"mappings":"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","file":"static/js/main.9549de21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feathers.5d1604d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/reflection.12ac7e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sweat.252f084c.svg\";","module.exports = __webpack_public_path__ + \"static/media/layers.3270f283.svg\";","module.exports = __webpack_public_path__ + \"static/media/graph.8eb825b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.b5dde3a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/log-in.47590da8.svg\";","module.exports = __webpack_public_path__ + \"static/media/test.7a5e162d.svg\";","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return <h2>NotFound</h2>;\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport './index.scss';\r\nimport './media.scss';\r\n\r\nconst Header = props => (\r\n    <header className=\"header\" {...props}>\r\n        <div className=\"content\">\r\n            <div className=\"header__logo\">\r\n                <NavLink to=\"/\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"logo__quarter\" />\r\n                        <div className=\"logo__quarter\" />\r\n                        <div className=\"logo__quarter\" />\r\n                        <div className=\"logo__quarter\" />\r\n                    </div>\r\n                </NavLink>\r\n            </div>\r\n            <nav className=\"header__nav\">\r\n                <PerfectScrollbar className=\"nav-links\" suppressScrollY={true}>\r\n                    <div className=\"nav-item\">\r\n                        <NavLink to=\"/training\" activeClassName=\"nav-link-active\">\r\n                            Тренажер\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"nav-item\">\r\n                        <a href=\"/#\">Учебник</a>\r\n                    </div>\r\n                    <div className=\"nav-item\">\r\n                        <a href=\"/#\">О проекте</a>\r\n                    </div>\r\n                </PerfectScrollbar>\r\n                <div className=\"nav-item login-button\">\r\n                    <a href=\"/#\">Войти</a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst Footer = props => (\r\n    <footer id=\"footer\" className=\"footer\">\r\n        <div className=\"content\">\r\n            <div className=\"col\">© 2019 sqllearning.ru Все права защищены.</div>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport feathers from '../../../images/feathers.svg';\r\nimport reflection from '../../../images/reflection.svg';\r\nimport sweat from '../../../images/sweat.svg';\r\nimport layers from '../../../images/layers.svg';\r\n\r\nconst Features = props => (\r\n    <div className=\"features-block\">\r\n        <div className=\"content\">\r\n            <div className=\"feature\">\r\n                <img className=\"feature__image\" alt=\"\" src={feathers} />\r\n                <div className=\"feature__title\">Feature #1</div>\r\n                <div className=\"feature__text\">Кратенькое описание первой особенности.</div>\r\n            </div>\r\n            <div className=\"feature\">\r\n                <img className=\"feature__image\" alt=\"\" src={reflection} />\r\n                <div className=\"feature__title\">Feature #2</div>\r\n                <div className=\"feature__text\">Кратенькое описание второй особенности.</div>\r\n            </div>\r\n            <div className=\"feature\">\r\n                <img className=\"feature__image\" alt=\"\" src={sweat} />\r\n                <div className=\"feature__title\">Feature #3</div>\r\n                <div className=\"feature__text\">Кратенькое описание третьей особенности.</div>\r\n            </div>\r\n            <div className=\"feature\">\r\n                <img className=\"feature__image\" alt=\"\" src={layers} />\r\n                <div className=\"feature__title\">Feature #4</div>\r\n                <div className=\"feature__text\">Кратенькое описание четвёртой особенности.</div>\r\n            </div>\r\n            <div className=\"feature question\">\r\n                <div className=\"feature__title\">Новичок в программировании?</div>\r\n                <div className=\"feature__text\">Тогда этот сервис для тебя! (или шото типа того)</div>\r\n                <Link to=\"/training\" className=\"feature__button\">\r\n                    Начать\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Features;\r\n","import React from 'react';\r\n\r\nimport graph from '../../../images/graph.svg';\r\nimport list from '../../../images/list.svg';\r\nimport login from '../../../images/log-in.svg';\r\nimport test from '../../../images/test.svg';\r\n\r\nconst Steps = props => (\r\n    <div className=\"steps-block\">\r\n        <div className=\"content\">\r\n            <h1>Как это работает</h1>\r\n            <div className=\"steps\">\r\n                <div className=\"step\">\r\n                    <div className=\"step__top\">\r\n                        <img src={login} alt=\"\" className=\"step__icon\" />\r\n                    </div>\r\n                    <div className=\"step__info\">\r\n                        <div className=\"step__counter\">1</div>\r\n                        <div className=\"step__description\">Зарегистрируйтесь в системе</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"step\">\r\n                    <div className=\"step__top\">\r\n                        <img src={list} alt=\"\" className=\"step__icon\" />\r\n                    </div>\r\n                    <div className=\"step__info\">\r\n                        <div className=\"step__counter\">2</div>\r\n                        <div className=\"step__description\">Добавьте учеников в группу</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"step\">\r\n                    <div className=\"step__top\">\r\n                        <img src={test} alt=\"\" className=\"step__icon\" />\r\n                    </div>\r\n                    <div className=\"step__info\">\r\n                        <div className=\"step__counter\">3</div>\r\n                        <div className=\"step__description\">Сгенерируйте тест</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"step\">\r\n                    <div className=\"step__top\">\r\n                        <img src={graph} alt=\"\" className=\"step__icon\" />\r\n                    </div>\r\n                    <div className=\"step__info\">\r\n                        <div className=\"step__counter\">4</div>\r\n                        <div className=\"step__description\">Отслеживайте результаты</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Steps;\r\n","import React from 'react';\r\n\r\nconst AboutUs = props => (\r\n    <div className=\"about-us-block\">\r\n        <div className=\"content\">\r\n            <h1>Что ты такое?</h1>\r\n            <div className=\"about-us-block__text\">\r\n                <p>\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Excepturi voluptatibus laboriosam nisi\r\n                    natus maxime odio rem quod aliquid assumenda itaque vel architecto adipisci, mollitia ullam est\r\n                    voluptatem et. Reiciendis, quas!\r\n                </p>\r\n                <p>\r\n                    Lorem ipsum dolor, sit amet consectetur adipisicing elit. Libero itaque blanditiis, dolorum, placeat\r\n                    dicta natus non exercitationem provident deleniti error pariatur! Corporis quo iure ratione eveniet,\r\n                    illum tempora sed maxime!\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AboutUs;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header, Footer } from '../../common';\r\n\r\nimport Features from './Features';\r\nimport Steps from './Steps';\r\nimport AboutUs from './AboutUs';\r\n\r\nimport './index.scss';\r\nimport './media.scss';\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        document.title = 'Knowledge Control System';\r\n        document.querySelector('.app').className = 'app home-component';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <Header />\r\n                <main className=\"main\">\r\n                    <div className=\"first-screen\">\r\n                        <div className=\"content\">\r\n                            <div className=\"title\">\r\n                                Система контроля знаний BLABLABLA\r\n                                <br />\r\n                                <Link to=\"/training\">Попробовать</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Features />\r\n\r\n                    <AboutUs />\r\n\r\n                    <Steps />\r\n                </main>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\n\nimport './Table.scss';\n\nclass Table extends Component {\n    getData() {\n        const { rows, fields } = this.props;\n\n        return rows.map((row, index) => (\n            <div className=\"row\" key={index}>\n                {fields.map((field, index) => (\n                    <div className=\"data\" key={index}>\n                        {row[field.name]}\n                    </div>\n                ))}\n            </div>\n        ));\n    }\n\n    getFields() {\n        const { fields } = this.props;\n\n        return fields.map((field, index) => (\n            <div className=\"field\" key={index}>\n                {field.title}\n            </div>\n        ));\n    }\n\n    render() {\n        const { className } = this.props;\n\n        return (\n            <div className={className || ''}>\n                <div className=\"fields\">{this.getFields()}</div>\n                <div className=\"rows\">{this.getData()}</div>\n            </div>\n        );\n    }\n}\n\nexport default Table;\n","import * as types from '../../constants';\r\n\r\nconst setDatabase = payload => {\r\n    return {\r\n        type: types.DATABASE_LOADED,\r\n        payload,\r\n    };\r\n};\r\n\r\nconst isLoading = payload => {\r\n    return {\r\n        type: types.DATABASE_LOADING,\r\n        payload,\r\n    };\r\n};\r\n\r\nconst changeTableActivity = id => {\r\n    return {\r\n        type: types.CHANGE_TABLE_ACTIVITY,\r\n        id,\r\n    };\r\n};\r\n\r\nconst loadDatabaseFromAPI = dbID => {\r\n    return function(dispatch) {\r\n        dispatch(isLoading(true));\r\n\r\n        // API stub\r\n        // fetch('https://api.myjson.com/bins/f1jvq')\r\n        fetch(`http://localhost:8080/api/v1/db/open/${dbID}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 404) {\r\n                    dispatch(isLoading(false));\r\n                    console.log(res);\r\n                } else {\r\n                    dispatch(setDatabase({database: {...res}, isDatabaseLoading: false }));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(isLoading(false));\r\n                console.log(err);\r\n            });\r\n        // TODO: Доделать обработку ошибок\r\n    };\r\n};\r\n\r\nexport { loadDatabaseFromAPI, changeTableActivity, isLoading };\r\n","export const CHANGE_USER = 'CHANGE_USER';\n\nexport const QUESTIONS_LOADED = 'QUESTIONS_LOADED';\nexport const QUESTIONS_LOADING = 'QUESTIONS_LOADING';\nexport const CHANGE_QUESTION = 'CHANGE_QUESTION';\n\nexport const DATABASE_LOADING = 'DATABASE_LOADING';\nexport const DATABASE_LOADED = 'DATABASE_LOADED';\nexport const CHANGE_TABLE_ACTIVITY = 'CHANGE_TABLE_ACTIVITY';\n\nexport const PIN_INPUT_AREA = 'PIN_INPUT_AREA';\nexport const CREATE_NEW_TAB = 'CREATE_NEW_TAB';\nexport const CHANGE_TAB = 'CHANGE_TAB';\nexport const DELETE_TAB = 'DELETE_TAB';\nexport const DELETE_ALL_TABS = 'DELETE_ALL_TABS';\nexport const CHANGE_TAB_RESPONSE = 'CHANGE_TAB_RESPONSE';\nexport const CHANGE_TAB_HTML = 'CHANGE_TAB_HTML';\n","import * as types from '../../constants';\r\nimport { loadDatabaseFromAPI, isLoading as isDatabaseLoading } from './databaseActions';\r\n\r\nconst setQuestions = payload => {\r\n    const type = types.QUESTIONS_LOADED;\r\n    return { type, payload };\r\n};\r\n\r\nconst changeCurrQuestion = id => {\r\n    const type = types.CHANGE_QUESTION;\r\n    return { type, id };\r\n};\r\n\r\nconst isLoading = payload => {\r\n    const type = types.QUESTIONS_LOADING;\r\n    return { type, payload };\r\n};\r\n\r\nconst loadQuestionsFromAPI = () => {\r\n    return function(dispatch, getState) {\r\n        dispatch(isLoading(true));\r\n        dispatch(isDatabaseLoading(true));\r\n\r\n        // API stub\r\n        // fetch('https://api.myjson.com/bins/7ax0m')\r\n        fetch('http://localhost:8080/api/v1/tests/open/')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 404) {\r\n                    dispatch(isLoading(false));\r\n                    dispatch(isDatabaseLoading(false));\r\n                    console.log(res);\r\n                } else {\r\n                    const dbId = res.questions[0].database;\r\n                    dispatch(setQuestions({...res, isQuestionsLoading: false}));\r\n                    dispatch(loadDatabaseFromAPI(dbId));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(isLoading(false));\r\n                dispatch(isDatabaseLoading(false));\r\n                console.log(err);\r\n            });\r\n        // TODO: Доделать обработку ошибок\r\n    };\r\n};\r\n\r\nexport { loadQuestionsFromAPI, changeCurrQuestion };\r\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Questions extends Component {\n    state = {\n        isAllQOpen: false,\n    };\n\n    handleQuestionSwitcher = dir => {\n        const { questions, currQuestion } = this.props;\n        let newQuestion = dir === 'next' ? currQuestion + 1 : currQuestion - 1;\n\n        if (newQuestion > questions.length - 1) newQuestion = 0;\n        else if (newQuestion < 0) newQuestion = questions.length - 1;\n\n        this.setCurrQuestion(newQuestion);\n    };\n\n    handleQuestionChange(index) {\n        this.setCurrQuestion(index);\n        this.setState({ isAllQOpen: false });\n    }\n\n    setCurrQuestion(index) {\n        const { questions, loadDatabaseFromAPI, database, changeCurrQuestion, deleteAllTabs } = this.props;\n\n        if (!database || questions[index].database !== database.id) {\n            loadDatabaseFromAPI(questions[index].database);\n        }\n\n        changeCurrQuestion(index);\n\n        deleteAllTabs();\n    }\n\n    render() {\n        const { questions, currQuestion, isQuestionsLoading } = this.props;\n        const { isAllQOpen } = this.state;\n\n        return (\n            <>\n                <div className=\"questionbox\" data-loading={isQuestionsLoading}>\n                    <div className=\"title\">\n                        <div\n                            className=\"menu-icon\"\n                            data-tip=\"Список всех вопросов\"\n                            onClick={e => this.setState({ isAllQOpen: !isAllQOpen })}\n                        />\n                        Вопрос {!questions.length ? '' : `#${currQuestion + 1} из ${questions.length}`}\n                        <FontAwesomeIcon\n                            className=\"question__nav\"\n                            icon=\"angle-left\"\n                            data-tip=\"Предыдущий вопрос\"\n                            onClick={e => this.handleQuestionSwitcher('prev')}\n                        />\n                        <FontAwesomeIcon\n                            className=\"question__nav\"\n                            icon=\"angle-left\"\n                            rotation={180}\n                            data-tip=\"Следующий вопрос\"\n                            onClick={e => this.handleQuestionSwitcher('next')}\n                        />\n                    </div>\n                    {!questions.length ? (\n                        <div className=\"placeholder\">Вопросы не загружены</div>\n                    ) : (\n                        <div className=\"content\">\n                            {questions[currQuestion].question}\n                            {questions[currQuestion].fields ? (\n                                <div className=\"show\">\n                                    <b>Вывести</b>: {questions[currQuestion].fields.join(', ')}\n                                </div>\n                            ) : null}\n                        </div>\n                    )}\n                </div>\n                <div className={`all-questions ${isAllQOpen ? 'all-questions-active' : ''}`}>\n                    <h2>Все вопросы</h2>\n                    {questions.map((q, index) => {\n                        return (\n                            <div\n                                className={index === currQuestion ? 'question active' : 'question'}\n                                key={q.id}\n                                onClick={e => this.handleQuestionChange(index)}\n                            >\n                                <b>{index + 1}.</b> {q.question}\n                            </div>\n                        );\n                    })}\n                </div>\n                <div\n                    className={`all-questions-bg ${isAllQOpen ? 'all-questions-bg-active' : ''}`}\n                    onClick={e => this.setState({ isAllQOpen: !isAllQOpen })}\n                />\n            </>\n        );\n    }\n}\n\nexport default Questions;\n","import { connect } from 'react-redux';\nimport { deleteAllTabs } from '../../../../store/actions/tabsActions';\nimport { loadDatabaseFromAPI } from '../../../../store/actions/databaseActions';\nimport { changeCurrQuestion } from '../../../../store/actions/questionActions';\n\nimport Questions from '../Questions';\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        questions: state.questions.questions,\n        isQuestionsLoading: state.questions.isQuestionsLoading,\n        currQuestion: state.questions.currQuestion,\n        database: state.database.database,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteAllTabs: () => {\n            dispatch(deleteAllTabs());\n        },\n        loadDatabaseFromAPI: id => {\n            dispatch(loadDatabaseFromAPI(id));\n        },\n        changeCurrQuestion: id => {\n            dispatch(changeCurrQuestion(id));\n        },\n    };\n};\n\nconst QuestionsContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Questions);\n\nexport default QuestionsContainer;\n","import * as types from '../../constants';\r\n\r\nconst createNewTab = () => {\r\n    return {\r\n        type: types.CREATE_NEW_TAB,\r\n        payload: {\r\n            html: '',\r\n            title: 'Tab',\r\n            response: undefined,\r\n        },\r\n    };\r\n};\r\n\r\nconst changeTab = index => {\r\n    return {\r\n        type: types.CHANGE_TAB,\r\n        index,\r\n    };\r\n};\r\n\r\nconst deleteTab = () => {\r\n    return {\r\n        type: types.DELETE_TAB,\r\n    };\r\n};\r\n\r\nconst deleteAllTabs = () => {\r\n    return {\r\n        type: types.DELETE_ALL_TABS,\r\n    };\r\n};\r\n\r\nconst changeTabResponse = (index, response) => {\r\n    return {\r\n        type: types.CHANGE_TAB_RESPONSE,\r\n        index,\r\n        response,\r\n    };\r\n};\r\n\r\nconst changeTabHtml = (index, html) => {\r\n    return {\r\n        type: types.CHANGE_TAB_HTML,\r\n        html,\r\n        index,\r\n    };\r\n};\r\n\r\nexport { createNewTab, changeTab, deleteTab, changeTabResponse, deleteAllTabs, changeTabHtml };\r\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Tabs extends Component {\n    _deleteTab = e => {\n        e.stopPropagation();\n        this.props.deleteTab();\n    };\n\n    render() {\n        const { tabs, currTab, isInputAreaPinned, pinInputArea, createNewTab, changeTab } = this.props;\n\n        return (\n            <div className=\"tabs\">\n                <div>\n                    {tabs.map((tab, index) => (\n                        <div\n                            className={`tab ${currTab === index ? 'active' : ''}`}\n                            onClick={e => changeTab(index)}\n                            key={index}\n                        >\n                            {tab.title}\n                            <FontAwesomeIcon icon=\"times\" className=\"tab-close\" onClick={this._deleteTab} />\n                        </div>\n                    ))}\n                    <FontAwesomeIcon\n                        className=\"tabs-icon\"\n                        icon=\"plus\"\n                        data-tip=\"Добавить новую вкладку\"\n                        onClick={createNewTab}\n                    />\n                </div>\n                <FontAwesomeIcon\n                    className={`tabs-icon pin ${isInputAreaPinned ? 'pin-active' : ''}`}\n                    icon=\"thumbtack\"\n                    data-tip={isInputAreaPinned ? 'Открепить' : 'Закрепить'}\n                    onClick={pinInputArea}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Tabs;\n","import { connect } from 'react-redux';\nimport { createNewTab, changeTab, deleteTab } from '../../../../store/actions/tabsActions';\n\nimport Tabs from '../Tabs';\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        tabs: state.tabs.tabs,\n        currTab: state.tabs.currTab,\n        isInputAreaPinned: ownProps.isInputAreaPinned,\n        pinInputArea: ownProps.pinInputArea,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createNewTab: () => {\n            dispatch(createNewTab());\n        },\n        changeTab: index => {\n            dispatch(changeTab(index));\n        },\n        deleteTab: () => {\n            dispatch(deleteTab());\n        },\n    };\n};\n\nconst TabsContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Tabs);\n\nexport default TabsContainer;\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Editor from 'react-simple-code-editor';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport Prism from 'prismjs';\r\nimport 'prismjs/components/prism-sql';\r\n\r\nimport { Header } from '../../common';\r\nimport Table from './Table';\r\nimport QuestionsContainer from './containers/Questions';\r\nimport TabsContainer from './containers/Tabs';\r\n\r\nimport './index.scss';\r\nimport './media.scss';\r\nimport 'prismjs/themes/prism.css';\r\n\r\nclass Training extends Component {\r\n    state = {\r\n        isInputAreaPinned: false,\r\n        SQLCheckingFor: undefined,\r\n        isCheckButtonDisabled: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.title = 'Training';\r\n        document.querySelector('.app').className = 'app training-component';\r\n        this.props.loadQuestionsFromAPI();\r\n    }\r\n\r\n    handleContentEditable = value => {\r\n        const { currTab, changeTabHtml } = this.props;\r\n        // this.props.changeTabHtml(currTab, e.currentTarget.textContent);\r\n        changeTabHtml(currTab, value);\r\n    };\r\n\r\n    highlightSQL = sql => {\r\n        console.log(sql);\r\n        sql = Prism.highlight(sql, Prism.languages.sql);\r\n        return sql;\r\n    };\r\n\r\n    pinInputArea = () => {\r\n        this.setState({ isInputAreaPinned: !this.state.isInputAreaPinned });\r\n    };\r\n\r\n    checkSQL = () => {\r\n        const { tabs, currTab, changeTabResponse } = this.props;\r\n        let newTabs = tabs.map(tab => tab);\r\n        let tab = currTab;\r\n\r\n        // API stub\r\n        this.setState({ SQLCheckingFor: currTab });\r\n\r\n        fetch('https://api.myjson.com/bins/vez0m')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 404) {\r\n                    console.log(res);\r\n                } else {\r\n                    newTabs[currTab].response = res;\r\n                    changeTabResponse(res, tab);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                this.setState({ SQLCheckingFor: undefined });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { isInputAreaPinned, SQLCheckingFor, isCheckButtonDisabled } = this.state;\r\n        const { database, isDatabaseLoading, changeTableActivity, tabs, currTab } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <Header style={{ minWidth: 900 }} />\r\n                <section className=\"training\">\r\n                    <PerfectScrollbar className=\"task-info\">\r\n                        <QuestionsContainer />\r\n                        <div className=\"tablesbox\" data-loading={isDatabaseLoading}>\r\n                            <div className=\"title\">\r\n                                Схема базы данных\r\n                                <a href=\"/\">\r\n                                    <FontAwesomeIcon\r\n                                        icon=\"sitemap\"\r\n                                        className=\"db-diagram-icon\"\r\n                                        data-tip=\"Подробная схема базы данных\"\r\n                                    />\r\n                                </a>\r\n                            </div>\r\n                            {database === undefined ? (\r\n                                <div className=\"placeholder\">База данных не загружена</div>\r\n                            ) : (\r\n                                database.tables.map((table, index) => {\r\n                                    return (\r\n                                        <div className=\"table\" key={index}>\r\n                                            <div\r\n                                                className={`table-title ${table.active ? 'active' : ''}`}\r\n                                                onClick={e => changeTableActivity(index)}\r\n                                            >\r\n                                                {table.title}\r\n                                            </div>\r\n                                            <div className={`table-props ${table.active ? 'active' : ''}`}>\r\n                                                {table.props.map((prop, index) => (\r\n                                                    <div\r\n                                                        className={`table-prop ${prop.isKey ? 'key' : ''}`}\r\n                                                        key={index}\r\n                                                    >\r\n                                                        <div>{prop.name}</div>\r\n                                                        <div>{prop.type.toUpperCase()}</div>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            )}\r\n                        </div>\r\n                    </PerfectScrollbar>\r\n                    <PerfectScrollbar className=\"task-editor\">\r\n                        <div className={`inputbox ${isInputAreaPinned ? 'pinned' : ''}`}>\r\n                            <TabsContainer isInputAreaPinned={isInputAreaPinned} pinInputArea={this.pinInputArea} />\r\n                            <PerfectScrollbar className=\"textarea-scrollbar\">\r\n                                <Editor\r\n                                    value={tabs[currTab].html}\r\n                                    onValueChange={code => this.handleContentEditable(code)}\r\n                                    highlight={code => this.highlightSQL(code)}\r\n                                    className=\"textarea\"\r\n                                    tabSize={4}\r\n                                />\r\n                            </PerfectScrollbar>\r\n                            <button\r\n                                className=\"check-sql\"\r\n                                onClick={this.checkSQL}\r\n                                disabled={\r\n                                    isCheckButtonDisabled ||\r\n                                    (SQLCheckingFor !== undefined && SQLCheckingFor === currTab)\r\n                                }\r\n                                data-loading={SQLCheckingFor !== undefined && SQLCheckingFor === currTab}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className={`resultbox ${\r\n                                SQLCheckingFor !== undefined && SQLCheckingFor === currTab ? 'checking' : ''\r\n                            }`}\r\n                        >\r\n                            {tabs[currTab].response ? (\r\n                                <Table\r\n                                    className={`response-table  ${isInputAreaPinned ? 'pinned' : ''}`}\r\n                                    fields={tabs[currTab].response.fields}\r\n                                    rows={tabs[currTab].response.rows}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    </PerfectScrollbar>\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Training;\r\n","import React from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst LogoPresentation = props => (\r\n    <div className=\"logo\">\r\n        <div className=\"logo__quarter\" />\r\n        <div className=\"logo__quarter\" />\r\n        <div className=\"logo__quarter\" />\r\n        <div className=\"logo__quarter\" />\r\n    </div>\r\n);\r\n\r\nexport default LogoPresentation;\r\n","import { connect } from 'react-redux';\nimport { loadQuestionsFromAPI, changeCurrQuestion } from '../../../../store/actions/questionActions';\nimport { loadDatabaseFromAPI, changeTableActivity } from '../../../../store/actions/databaseActions';\nimport { changeTabResponse, deleteAllTabs, changeTabHtml } from '../../../../store/actions/tabsActions';\n\nimport Training from '../index';\n\nconst mapStateToProps = state => {\n    return {\n        questions: state.questions.questions,\n        isQuestionsLoading: state.questions.isQuestionsLoading,\n        currQuestion: state.questions.currQuestion,\n        database: state.database.database,\n        isDatabaseLoading: state.database.isDatabaseLoading,\n        tabs: state.tabs.tabs,\n        currTab: state.tabs.currTab,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadQuestionsFromAPI: () => {\n            dispatch(loadQuestionsFromAPI());\n        },\n        changeCurrQuestion: id => {\n            dispatch(changeCurrQuestion(id));\n        },\n        loadDatabaseFromAPI: id => {\n            dispatch(loadDatabaseFromAPI(id));\n        },\n        changeTableActivity: id => {\n            dispatch(changeTableActivity(id));\n        },\n        changeTabResponse: (response, index) => {\n            dispatch(changeTabResponse(response, index));\n        },\n        deleteAllTabs: () => {\n            dispatch(deleteAllTabs());\n        },\n        changeTabHtml: (index, html) => {\n            dispatch(changeTabHtml(index, html));\n        },\n    };\n};\n\nconst TrainingContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Training);\n\nexport default TrainingContainer;\n","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n    faSignInAlt,\r\n    faPuzzlePiece,\r\n    faFileAlt,\r\n    faChartBar,\r\n    faPlus,\r\n    faAngleLeft,\r\n    faAngleRight,\r\n    faAngleDown,\r\n    faSitemap,\r\n    faTimes,\r\n    faThumbtack,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n    faSignInAlt,\r\n    faPuzzlePiece,\r\n    faFileAlt,\r\n    faChartBar,\r\n    faPlus,\r\n    faAngleLeft,\r\n    faAngleRight,\r\n    faAngleDown,\r\n    faSitemap,\r\n    faTimes,\r\n    faThumbtack,\r\n);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport NotFound from '../pages/NotFound';\r\nimport { Home, LogoPresentation, TrainingContainer } from '../pages/';\r\n\r\nimport '../../styles/vars.scss';\r\nimport './index.scss';\r\nimport '../../styles/scrollbar.css';\r\n\r\nimport '../../icons';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/training\" component={TrainingContainer} />\r\n                <Route path=\"/logo\" component={LogoPresentation} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n            <ReactTooltip type=\"info\" effect=\"solid\" delayShow={500} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import * as types from '../../constants';\r\n\r\nconst initialState = {\r\n    questions: [],\r\n    isQuestionsLoading: true,\r\n    currQuestion: 0,\r\n};\r\n\r\nconst questions = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.QUESTIONS_LOADED:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        case types.QUESTIONS_LOADING:\r\n            return {\r\n                ...state,\r\n                isQuestionsLoading: action.payload,\r\n            };\r\n\r\n        case types.CHANGE_QUESTION:\r\n            return {\r\n                ...state,\r\n                currQuestion: action.id,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default questions;\r\n","import * as types from '../../constants';\r\n\r\nconst initialState = {\r\n    database: undefined,\r\n    isDatabaseLoading: false,\r\n};\r\n\r\nconst questions = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.DATABASE_LOADED:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        case types.DATABASE_LOADING:\r\n            return {\r\n                ...state,\r\n                isDatabaseLoading: action.payload,\r\n            };\r\n\r\n        case types.CHANGE_TABLE_ACTIVITY:\r\n            const database = Object.assign({}, state.database);\r\n            database.tables[action.id].active = !database.tables[action.id].active;\r\n            return {\r\n                ...state,\r\n                database,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default questions;\r\n","import * as types from '../../constants';\r\n\r\nconst initialState = {\r\n    currTab: 0,\r\n    tabs: [\r\n        {\r\n            html: `SELECT * FROM generate_series CROSS JOIN departments`,\r\n            title: 'Tab',\r\n            response: undefined,\r\n        },\r\n        {\r\n            html: 'select * from table1',\r\n            title: 'Tab',\r\n            response: undefined,\r\n        },\r\n    ],\r\n};\r\n\r\nconst tabs = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.CREATE_NEW_TAB:\r\n            return {\r\n                ...state,\r\n                tabs: state.tabs.concat([action.payload]),\r\n                currTab: state.tabs.length,\r\n            };\r\n\r\n        case types.CHANGE_TAB:\r\n            return {\r\n                ...state,\r\n                currTab: action.index,\r\n            };\r\n\r\n        case types.CHANGE_TAB_HTML: {\r\n            let newTabs = state.tabs.map(tab => tab);\r\n            newTabs[action.index].html = action.html;\r\n\r\n            return {\r\n                ...state,\r\n                tabs: newTabs,\r\n            };\r\n        }\r\n\r\n        case types.DELETE_ALL_TABS:\r\n            return {\r\n                ...state,\r\n                tabs: [\r\n                    {\r\n                        html: '',\r\n                        title: 'Tab',\r\n                        response: undefined,\r\n                    },\r\n                ],\r\n                currTab: 0,\r\n            };\r\n\r\n        case types.CHANGE_TAB_RESPONSE: {\r\n            let newTabs = state.tabs.map(tab => tab);\r\n            try {\r\n                newTabs[action.index].response = action.response;\r\n                return {\r\n                    ...state,\r\n                    tabs: newTabs,\r\n                };\r\n            } catch (e) {\r\n                return {\r\n                    ...state,\r\n                };\r\n            }\r\n        }\r\n\r\n        case types.DELETE_TAB:\r\n            let newCurrTab = state.currTab;\r\n            let newTabs = state.tabs.map(tab => tab);\r\n\r\n            newTabs.splice(state.currTab, 1);\r\n\r\n            if (state.currTab > 0) newCurrTab -= 1;\r\n\r\n            if (newTabs.length === 0) {\r\n                newTabs = [\r\n                    {\r\n                        html: '',\r\n                        title: 'Tab',\r\n                        response: undefined,\r\n                    },\r\n                ];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                tabs: newTabs,\r\n                currTab: newCurrTab,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default tabs;\r\n","import { combineReducers } from 'redux';\r\nimport questions from './questionReducer';\r\nimport database from './databaseReducer';\r\nimport tabs from './tabsReducer';\r\n\r\nconst reducers = combineReducers({\r\n    questions,\r\n    database,\r\n    tabs,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './styles/vars.scss';\r\n\r\nimport App from './components/App/';\r\nimport store from './store/';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename=\"/frontend\">\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}